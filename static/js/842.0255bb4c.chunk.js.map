{"version":3,"file":"static/js/842.0255bb4c.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies.jsx","servise/servise.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\nlist-style: none;\nfont-family: 'Poppins';\nfont-weight: 500;\nfont-size: 18px;\n\n    a{\n    color: #191970;\n    text-decoration: none;\n    }\n    a:hover{\n    color: #0000FF;\n    text-decoration: none;\n    }\n    a:visited{\n    color: #191970;\n    text-decoration: none;\n    }\n    a:active{\n    text-decoration: none;\n    }\n\n`\nexport const Li = styled.li`\ncolor: #000000;\na:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n`","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Ul} from './MovieList.styled'\n\nconst MovieList = ({ movies }) => {\n   const location = useLocation();\n\n  return (\n    <>\n      <Ul>\n        {movies && movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location}}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  };\n\nexport default MovieList;","import styled from '@emotion/styled';\n\nexport const FormInput = styled.form`\ndisplay: flex;\ngap: 30px;\n`\nexport const Input = styled.input`\npadding: 15px;\nborder-radius:7px;\nbackground-color: #FFFFFF;\ndisplay: block;\nmargin-top: 20px;\nmargin-left: 20px;\nwidth: 300px;  \ncolor: #A9A9A9;\nfont-size:18px;\nborder: 1px solid #00FFFF;\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n:focus {\n    outline-color: rgba(0,0,0,0);\n    background: rgba(255,255,255,.95);\n    color: #191970;\n    border: 1px solid #0000FF;\n`\n\nexport const Button = styled.button`\nwidth: 100px;\npadding: 10px;\nmargin-top: 20px;\nborder-radius: 7px;\nborder: 1px solid #00FFFF;\nbackground-color: #00FFFF;\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  color: #191970;\n`","import { useState } from \"react\";\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport {Input, FormInput, Button} from './Form.styled'\n\nconst Form = ({setSearchParams}) => {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            Notiflix.Notify.info('Please enter your query!');\n            return;\n          }\n        setSearchParams({ query });\n    }\n\n    const handleChange = (e) => {\n        setQuery(e.currentTarget.value.toLowerCase())\n    }\n\n    return (\n        <FormInput onSubmit={handleSubmit}>\n            <Input \n            type=\"text\"\n            value={query}\n            onChange={handleChange}\n            placeholder=\"Name movie\"\n            autoFocus\n            />\n            <Button\n            type='submit'\n            disabled={!query}\n            >Search\n            </Button>\n        </FormInput>\n    )\n\n}\n\nForm.propTypes = {\n    setSearchParams:PropTypes.func.isRequired\n\n}\n\nexport default Form;","import Form from \"components/Form/Form\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesQuery } from \"servise/servise\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null); \n    const [isLoading, setIsLoading] = useState(false);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        // console.log({currentQuery})\n        if (!currentQuery) return;\n\n        const serchMovies = async () => {\n            setIsLoading(true);\n            try {\n                const data = await getMoviesQuery(currentQuery);\n                setMovies(data.results);\n            } catch (error) {\n                setError(error.massage);\n            } finally {\n                setIsLoading(false);\n              }\n        }\n        serchMovies()\n    }, [searchParams])\n\n\n\n    return (\n        <>\n        <Form setSearchParams={setSearchParams}/>\n        {movies.length > 0 && <MovieList movies={movies}/>}\n        {isLoading && <Loader />}\n        {error && <div>{error}</div>}\n        </>\n    )\n}\n\nexport default Movies;","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const responce = await axios.get(   \n      `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`\n    )\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetails(id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsCast(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return responce.data;\n}\n"],"names":["Ul","styled","movies","location","useLocation","map","id","original_title","to","state","from","FormInput","Input","Button","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","Notiflix","type","value","onChange","currentTarget","toLowerCase","placeholder","autoFocus","disabled","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","useEffect","currentQuery","get","serchMovies","getMoviesQuery","data","results","massage","length","MovieList","Loader","BASE_URL","KEY","getMovies","page","axios","responce","getMoviesDetails","getMoviesDetailsCast","movie_id","getMoviesDetailsReviews","movieId"],"sourceRoot":""}