{"version":3,"file":"static/js/387.5bf71ecb.chunk.js","mappings":"gSAEaA,EAAcC,EAAAA,EAAAA,GAAH,mEAIXC,EAAQD,EAAAA,EAAAA,GAAH,8EAKLE,EAAUF,EAAAA,EAAAA,EAAH,8F,SCuCpB,EAvCgB,WACZ,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACNC,EAAyBH,EAC5B,GAAE,CAACA,IAEJ,IAAMG,EAAwB,mCAAG,WAAOH,GAAP,8EAC7BD,GAAa,GADgB,mBAGNK,EAAAA,EAAAA,IAAwBJ,GAHlB,OAGnBK,EAHmB,OAIzBV,EAAWU,EAAKC,SAJS,gDAMzBT,EAAS,KAAMU,SANU,yBAQ3BR,GAAa,GARc,4EAAH,sDAY9B,OACI,iCACA,SAACV,EAAD,UACCK,EAAQc,OAAS,GACZd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACZ,2BACE,SAACrB,EAAD,UAAQmB,KACR,SAAClB,EAAD,UAAUmB,MAFHC,EADG,MAOjBd,IAAa,SAACe,EAAA,EAAD,IACbjB,IAAS,yBAAMA,MAIvB,C,mMC/CKkB,EAAW,+BACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBC,EAAzB,+BAA8B,EAA9B,SACoBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,uCACqBC,EADrB,iBACiCE,IAFrD,cACGE,EADH,yBAIIA,EAASd,MAJb,mEAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBAC4BM,IAF9C,cACCF,EADD,yBAIEA,EAASd,MAJX,kEAOA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCV,GAAhC,uFACkBM,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAF,EADA,oBACcG,IAFhC,cACCI,EADD,yBAIEA,EAASd,MAJX,kEAOA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,uFACkBN,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAU,EADA,4BAC4BT,IAF9C,cACCI,EADD,yBAIEA,EAASd,MAJX,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAuCJ,GAAvC,uFACkBkB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAd,EADA,4BAC2Be,IAF7C,cACCI,EADD,yBAIEA,EAASd,MAJX,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servise/servise.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\nlist-style: none;\ntext-decoration: none;\n`\nexport const Autor = styled.h2`\nfont-weight: 600;\nfont-size: 24px;\ncolor: #191970;\n`\nexport const Content = styled.p`\nfont-weight: 400;\nfont-size: 16px;\ncolor: #191970;\nwidth: 1200px;\n`","import { getMoviesDetailsReviews } from \"servise/servise\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { \n    ReviewsList,\n    Autor,\n    Content\n\n } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null); \n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        serchMovieDetailsRevievs(movieId);\n    }, [movieId])\n\n    const serchMovieDetailsRevievs = async (movieId) => {\n        setIsLoading(true);\n        try {\n            const data = await getMoviesDetailsReviews(movieId);\n            setReviews(data.results);\n        } catch (error) {\n            setError(error.massage);\n        } finally {\n          setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n        <ReviewsList>\n        {reviews.length > 0\n          &&  reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <Autor>{author}</Autor>\n                <Content>{content}</Content>\n              </li> \n        ))}\n        </ReviewsList>\n        {isLoading && <Loader />}\n        {error && <div>{error}</div>}\n        </>\n    )\n\n}\nexport default Reviews;","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const responce = await axios.get(   \n      `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`\n    )\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetails(id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsCast(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return responce.data;\n}\n"],"names":["ReviewsList","styled","Autor","Content","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","serchMovieDetailsRevievs","getMoviesDetailsReviews","data","results","massage","length","map","author","content","id","Loader","BASE_URL","KEY","getMovies","page","axios","responce","getMoviesQuery","query","getMoviesDetails","getMoviesDetailsCast","movie_id"],"sourceRoot":""}