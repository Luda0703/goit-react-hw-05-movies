{"version":3,"file":"static/js/592.fec8153c.chunk.js","mappings":"oKA+BA,IA5BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAGlB,OADAC,QAAQC,IAAI,CAACJ,OAAAA,KAEX,+BACE,wBACGA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,UACE,wBAAKM,OAFAD,EADC,OAUnB,C,+ICiBD,EAlCa,SAAC,GAAuB,IAAtBK,EAAqB,EAArBA,gBACX,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACI,kBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACmB,KAAjBJ,EAAMK,OAIVP,EAAgB,CAAEE,MAAAA,IAHdM,IAAAA,OAAAA,KAAqB,2BAI5B,EAOG,WACI,kBACAC,KAAK,OACLC,MAAOR,EACPS,SATa,SAACN,GAClBF,EAASE,EAAEO,cAAcF,MAAMG,cAClC,EAQOC,YAAY,aACZC,WAAS,KAET,mBACAN,KAAK,SACLO,UAAWd,EAFX,SAGC,aAIZ,E,0BCKD,EAjCe,WACX,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAe4B,EAAf,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBrB,EAArB,KAoBA,OAlBAsB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAeF,EAAaG,IAAI,SAEtC,GAAKD,EAAL,CAEA,IAAME,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAeH,GAFtB,OAENI,EAFM,OAGZV,EAAUU,EAAKC,SAHH,gDAKZT,EAAS,KAAMU,SALH,yDAAH,qDAQjBJ,GAVyB,CAW5B,GAAE,CAACJ,KAKA,iCACA,SAAC,EAAD,CAAMrB,gBAAiBA,IACtBX,EAAOyC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAW1C,OAAQA,IACxC6B,IAAS,yBAAMA,MAGvB,C,+ICpCKc,EAAW,+BACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBC,EAAzB,+BAA8B,EAA9B,SACoBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wCACsBC,EADtB,iBACkCE,EADlC,oBADpB,cACGE,EADH,yBAIIA,EAASV,MAJb,mEAQA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,uFACkBkC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBAC4B/B,EAD5B,oBADlB,cACCmC,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAO,EADA,oBACoBN,EADpB,oBADlB,cACCI,EADD,yBAIEA,EAASV,MAJX,kE","sources":["components/MovieList/MovieList.jsx","components/Form/Form.jsx","pages/Movies.jsx","servise/servise.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n   const location = useLocation();\n   \n  console.log({movies})\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location}}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  };\n\nexport default MovieList;","import { useState } from \"react\";\nimport Notiflix from 'notiflix';\n\nconst Form = ({setSearchParams}) => {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            Notiflix.Notify.info('Please enter your query!');\n            return;\n          }\n        setSearchParams({ query });\n    }\n\n    const handleChange = (e) => {\n        setQuery(e.currentTarget.value.toLowerCase())\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\"\n            value={query}\n            onChange={handleChange}\n            placeholder=\"Name movie\"\n            autoFocus\n            />\n            <button\n            type='submit'\n            disabled={!query}\n            >Search</button>\n        </form>\n    )\n\n}\n\nexport default Form;","import Form from \"components/Form/Form\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesQuery } from \"servise/servise\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null); \n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        // console.log({currentQuery})\n        if (!currentQuery) return;\n\n        const serchMovies = async () => {\n            try {\n                const data = await getMoviesQuery(currentQuery);\n                setMovies(data.results);\n            } catch (error) {\n                setError(error.massage);\n            } \n        }\n        serchMovies()\n    }, [searchParams])\n\n\n\n    return (\n        <>\n        <Form setSearchParams={setSearchParams}/>\n        {movies.length > 0 && <MovieList movies={movies}/>}\n        {error && <div>{error}</div>}\n        </>\n    )\n}\n\nexport default Movies;","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const responce = await axios.get(   \n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n    );\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return responce.data;\n}\n\nexport async function getMoviesDetails(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n}\n"],"names":["movies","location","useLocation","console","log","map","id","original_title","to","state","from","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","Notiflix","type","value","onChange","currentTarget","toLowerCase","placeholder","autoFocus","disabled","setMovies","error","setError","useSearchParams","searchParams","useEffect","currentQuery","get","serchMovies","getMoviesQuery","data","results","massage","length","MovieList","BASE_URL","KEY","getMovies","page","axios","responce","getMoviesDetails","movie_id"],"sourceRoot":""}