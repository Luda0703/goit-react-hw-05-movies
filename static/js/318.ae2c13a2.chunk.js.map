{"version":3,"file":"static/js/318.ae2c13a2.chunk.js","mappings":"sNAEaA,EAAKC,EAAAA,EAAAA,GAAH,6W,GAuBGA,EAAAA,EAAAA,GAAH,0H,QCMf,EA3BkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAElB,OACE,+BACE,SAACJ,EAAD,UACGE,GAAUA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,eAApB,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,UACE,wBAAKI,GAASC,GAAQC,OAFjBH,EADW,OAU7B,C,gKCHD,EAZa,WACT,MCHmB,WACnB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACNC,GACH,GAAE,IACH,IAAMA,EAAe,mCAAG,2FACpBF,GAAa,GADO,mBAGGG,EAAAA,EAAAA,MAHH,OAGVC,EAHU,OAIhBR,EAAUQ,EAAKC,SAJC,gDAMhBP,EAAS,KAAMQ,SANC,yBAQhBN,GAAa,GARG,4EAAH,qDAWrB,MAAO,CAAEhB,OAAAA,EAAQa,MAAAA,EAAOE,UAAAA,EAC3B,CDjBwCQ,GAA7BvB,EAAR,EAAQA,OAAQa,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,UAEvB,OACI,gCACCf,IAAU,SAACwB,EAAA,EAAD,CAAWxB,OAAQA,IAC7Be,IAAa,SAACU,EAAA,EAAD,IACbZ,IAAS,yBAAMA,MAGvB,C,mMEbKa,EAAW,+BACXC,EAAG,mCAEF,SAAeR,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBS,EAAzB,+BAA8B,EAA9B,SACoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,iBACiCC,IAFrD,cACGE,EADH,yBAIIA,EAASV,MAJb,mEAQA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BK,IAF9C,cACCF,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgC7B,GAAhC,uFACkByB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAtB,EADA,oBACcuB,IAFhC,cACCG,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAS,EADA,4BAC4BR,IAF9C,cACCG,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAuCC,GAAvC,uFACkBR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,IAF7C,cACCG,EADD,yBAIEA,EAASV,MAJX,kE","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","hooks/useHome.jsx","servise/servise.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\nlist-style: none;\nfont-family: 'Poppins';\nfont-weight: 500;\nfont-size: 18px;\n\n    a{\n    color: #191970;\n    text-decoration: none;\n    }\n    a:hover{\n    color: #0000FF;\n    text-decoration: none;\n    }\n    a:visited{\n    color: #191970;\n    text-decoration: none;\n    }\n    a:active{\n    text-decoration: none;\n    }\n\n`\nexport const Li = styled.li`\ncolor: #000000;\na:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n`","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Ul} from './MovieList.styled'\n\nconst MovieList = ({ movies }) => {\n   const location = useLocation();\n\n  return (\n    <>\n      <Ul>\n        {movies && movies.map(({ id, title, name, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location}}>\n              <h3>{title || name || original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string,\n      })\n    ).isRequired,\n  };\n\nexport default MovieList;","import { useHome } from \"hooks/useHome\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\nconst Home = () => {\n    const { movies, error, isLoading } = useHome();\n\n    return (\n        <>\n        {movies && <MovieList movies={movies} />}\n        {isLoading && <Loader />}\n        {error && <div>{error}</div>}\n        </>\n    )\n}\n\nexport default Home;\n\n","import { useState, useEffect } from \"react\";\nimport { getMovies } from \"servise/servise\";\n\nexport const useHome = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);  \n\n    useEffect(() => {\n        getSearchMovies()\n    }, [])\n    const getSearchMovies = async () => {\n        setIsLoading(true);\n        try {\n            const data = await getMovies();\n            setMovies(data.results);\n        } catch (error) {\n            setError(error.massage);\n        } finally {\n            setIsLoading(false);\n          }\n    }\n    return { movies, error, isLoading}\n}","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const responce = await axios.get(   \n      `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`\n    )\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetails(id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsCast(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  )\n  return responce.data;\n}\n\nexport async function getMoviesDetailsReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return responce.data;\n}\n"],"names":["Ul","styled","movies","location","useLocation","map","id","title","name","original_title","to","state","from","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","getSearchMovies","getMovies","data","results","massage","useHome","MovieList","Loader","BASE_URL","KEY","page","axios","responce","getMoviesQuery","query","getMoviesDetails","getMoviesDetailsCast","movie_id","getMoviesDetailsReviews","movieId"],"sourceRoot":""}