{"version":3,"file":"static/js/884.4d64c359.chunk.js","mappings":"0OA2EA,UAlEqB,WAAO,IAAD,IACvB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAqB3D,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,2FACxBV,GAAa,GADW,mBAICW,EAAAA,EAAAA,IAAiBV,GAJlB,OAIZW,EAJY,OAKlBhB,EAASgB,EAAKC,SALI,gDAOlBf,EAAS,KAAMgB,SAPG,yBASpBd,GAAa,GATO,4EAAH,qDAYvBU,GAEH,GAAE,CAACT,KAKA,+BAEA,6BACI,SAAC,KAAD,CAAMc,GAAIV,EAAoBW,QAA9B,UACE,4BAAS,cAEVrB,IACD,4BACI,gBAAKsB,IAAKtB,EAAMuB,YAAaC,IAAKxB,EAAMyB,kBACxC,wBAAKzB,EAAMyB,kBACX,0BAAOzB,EAAM0B,gBACb,uBAAI1B,EAAM2B,YACV,wBACC3B,EAAM4B,QACL5B,EAAM4B,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,UAKvB,2BACA,yBACA,SAAC,KAAD,CAASV,GAAG,OAAOR,MAAOJ,EAASI,MAAnC,SAA0C,YAE5C,yBACE,SAAC,KAAD,CAASQ,GAAG,UAAUR,MAAOJ,EAASI,MAAtC,SAA6C,iBAGhDR,IAAa,SAAC,IAAD,IACbF,IAAS,yBAAMA,KAChB,SAAC,EAAA8B,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACA,SAAC,KAAD,UAMP,C,+ICvEKC,EAAW,+BACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAyBC,EAAzB,+BAA8B,EAA9B,SACsBC,EAAAA,EAAAA,IAAA,UACpBJ,EADoB,wCACoBC,EADpB,iBACgCE,EADhC,oBADtB,uBACIE,EADJ,EACIA,SADJ,kBAIIA,EAAStB,MAJb,mEAQA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBAC4BM,EAD5B,oBADlB,cACCF,EADD,yBAIEA,EAAStB,MAJX,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAgC0B,GAAhC,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAQ,EADA,oBACoBP,EADpB,oBADlB,cACCI,EADD,yBAIEA,EAAStB,MAJX,kE","sources":["pages/MovieDetails.jsx","servise/servise.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Link, useLocation, NavLink } from 'react-router-dom';\nimport { getMoviesDetails } from \"servise/servise\";\n// import MovieDetailsList from \"components/MovieDetailsList/MovieDetailsList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState([]);\n    const [error, setError] = useState(null); \n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n    useEffect(() => {\n        const serchMovieDetails = async () => {\n          setIsLoading(true);\n            try {\n              // console.log(movieId)\n                const data = await getMoviesDetails(movieId);\n                setMovie(data.results);\n            } catch (error) {\n                setError(error.massage);\n            } finally {\n              setIsLoading(false);\n            }\n        }\n        serchMovieDetails()\n\n    }, [movieId])\n\n    // const {original_title, overview, genres, poster_path, vote_average} = movie;\n\n    return (\n        <>\n        {/* <MovieDetailsList /> */}\n        <main>\n            <Link to={backLinkLocationRef.current}>\n              <button >Go back</button>\n            </Link>\n            {movie && (\n            <div> \n                <img src={movie.poster_path} alt={movie.original_title}/>\n                <h1>{movie.original_title}</h1>\n                <span>{movie.vote_average}</span>\n                <p>{movie.overview}</p>\n                <ul>\n                {movie.genres &&\n                  movie.genres.map(({ id, name }) => <li key={id}>{name}</li>\n                  )}\n                </ul>\n            </div>\n             )} \n            <ul>\n            <li>\n            <NavLink to=\"cast\" state={location.state}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={location.state}>Reviews</NavLink>\n          </li>\n        </ul>\n        {isLoading && <Loader />}\n        {error && <div>{error}</div>}\n        <Suspense fallback={<Loader />}>\n        <Outlet />\n        </Suspense>\n        </main>\n        </>\n    )\n\n}\n\nexport default MovieDetails;","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const {responce} = await axios.get(   \n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n    );\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return responce.data;\n}\n\nexport async function getMoviesDetails(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n}\n"],"names":["useState","movie","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","serchMovieDetails","getMoviesDetails","data","results","massage","to","current","src","poster_path","alt","original_title","vote_average","overview","genres","map","id","name","Suspense","fallback","BASE_URL","KEY","getMovies","page","axios","responce","getMoviesQuery","query","movie_id"],"sourceRoot":""}