{"version":3,"file":"static/js/884.a59b6628.chunk.js","mappings":"0OA6EA,UApEqB,WAAO,IAAD,IACvB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE3DC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAiBV,GAFlB,OAEZW,EAFY,OAGlBd,EAAUc,EAAKC,SAHG,gDAKlBb,EAAS,KAAMc,SALG,yDAAH,qDAQvBJ,GAEH,GAAE,CAACT,IAEJ,IAAOc,EAA+DlB,EAA/DkB,eAAgBC,EAA+CnB,EAA/CmB,SAAUC,EAAqCpB,EAArCoB,OAAQC,EAA6BrB,EAA7BqB,YAAaC,EAAgBtB,EAAhBsB,aAEtD,OACI,+BAEA,6BACI,SAAC,KAAD,CAAMC,GAAIf,EAAoBgB,QAA9B,UACE,4BAAS,qCAEVxB,IACD,4BAEI,gBACAyB,IACAJ,EAAW,yCAC2BA,GAD3B,gDAIbK,MAAO,IACPC,OAAQ,IACRC,IAAI,YAEF,wBAAKV,KACL,0BAAOI,KACP,uBAAIH,KACJ,wBACCC,GACCA,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,UAGjB,2BACA,yBACA,SAAC,KAAD,CAASP,GAAG,OAAOb,MAAOJ,EAASI,MAAnC,SAA0C,YAE5C,yBACE,SAAC,KAAD,CAASa,GAAG,UAAUb,MAAOJ,EAASI,MAAtC,SAA6C,iBAGhDR,IAAS,yBAAMA,KAChB,SAAC,EAAA8B,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACA,SAAC,KAAD,UAMP,C,+ICzEKC,EAAW,+BACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBC,EAAzB,+BAA8B,EAA9B,SACoBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wCACsBC,EADtB,iBACkCE,EADlC,oBADpB,cACGE,EADH,yBAIIA,EAASxB,MAJb,mEAQA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBAC4BM,EAD5B,oBADlB,cACCF,EADD,yBAIEA,EAASxB,MAJX,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAgC4B,GAAhC,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAQ,EADA,oBACoBP,EADpB,oBADlB,cACCI,EADD,yBAIEA,EAASxB,MAJX,kE","sources":["pages/MovieDetails.jsx","servise/servise.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Link, useLocation, NavLink } from 'react-router-dom';\nimport { getMoviesDetails } from \"servise/servise\";\n// import MovieDetailsList from \"components/MovieDetailsList/MovieDetailsList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nconst MovieDetails = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null); \n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n    useEffect(() => {\n        const serchMovieDetails = async () => {\n            try {\n                const data = await getMoviesDetails(movieId);\n                setMovies(data.results);\n            } catch (error) {\n                setError(error.massage);\n            } \n        }\n        serchMovieDetails()\n\n    }, [movieId])\n\n    const {original_title, overview, genres, poster_path, vote_average} = movies;\n\n    return (\n        <>\n        {/* <MovieDetailsList /> */}\n        <main>\n            <Link to={backLinkLocationRef.current}>\n              <button >Назад</button>\n            </Link>\n            {movies && (\n            <div> \n                {/* <img src={poster_path} alt={original_title}/> */}\n                <img\n                src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : `https://www.suryalaya.org/images/no_image.jpg`\n              }\n              width={320}\n              height={400}\n              alt=\"poster\"\n              />\n                <h1>{original_title}</h1>\n                <span>{vote_average}</span>\n                <p>{overview}</p>\n                <ul>\n                {genres &&\n                  genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n                </ul>\n            </div>)}\n            <ul>\n            <li>\n            <NavLink to=\"cast\" state={location.state}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={location.state}>Reviews</NavLink>\n          </li>\n        </ul>\n        {error && <div>{error}</div>}\n        <Suspense fallback={<Loader />}>\n        <Outlet />\n        </Suspense>\n        </main>\n        </>\n    )\n\n}\n\nexport default MovieDetails;","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = `0481b46021a7a1a44f55c7836fc47fbf`;\n\nexport async function getMovies(page=1) {\n    const responce = await axios.get(   \n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n    );\n    return responce.data;\n}\n\n\nexport async function getMoviesQuery(query) {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return responce.data;\n}\n\nexport async function getMoviesDetails(movie_id) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n}\n"],"names":["useState","movies","setMovies","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","serchMovieDetails","getMoviesDetails","data","results","massage","original_title","overview","genres","poster_path","vote_average","to","current","src","width","height","alt","map","id","name","Suspense","fallback","BASE_URL","KEY","getMovies","page","axios","responce","getMoviesQuery","query","movie_id"],"sourceRoot":""}